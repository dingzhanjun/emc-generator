<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Config', 'doctrine');

/**
 * BaseConfig
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $max_age
 * @property string $origin
 * @property integer $origin_radius
 * @property string $destination
 * @property integer $destination_radius
 * @property integer $loads_type
 * @property double $length
 * @property double $weight
 * @property date $from_date
 * @property date $to_date
 * @property integer $frequence
 * @property integer $type
 * @property datetime $last_executed_at
 * @property Doctrine_Collection $JobboardConfigs
 * @property Doctrine_Collection $ConfigTrucks
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getName()               Returns the current record's "name" value
 * @method integer             getMaxAge()             Returns the current record's "max_age" value
 * @method string              getOrigin()             Returns the current record's "origin" value
 * @method integer             getOriginRadius()       Returns the current record's "origin_radius" value
 * @method string              getDestination()        Returns the current record's "destination" value
 * @method integer             getDestinationRadius()  Returns the current record's "destination_radius" value
 * @method integer             getLoadsType()          Returns the current record's "loads_type" value
 * @method double              getLength()             Returns the current record's "length" value
 * @method double              getWeight()             Returns the current record's "weight" value
 * @method date                getFromDate()           Returns the current record's "from_date" value
 * @method date                getToDate()             Returns the current record's "to_date" value
 * @method integer             getFrequence()          Returns the current record's "frequence" value
 * @method integer             getType()               Returns the current record's "type" value
 * @method datetime            getLastExecutedAt()     Returns the current record's "last_executed_at" value
 * @method Doctrine_Collection getJobboardConfigs()    Returns the current record's "JobboardConfigs" collection
 * @method Doctrine_Collection getConfigTrucks()       Returns the current record's "ConfigTrucks" collection
 * @method Config              setId()                 Sets the current record's "id" value
 * @method Config              setName()               Sets the current record's "name" value
 * @method Config              setMaxAge()             Sets the current record's "max_age" value
 * @method Config              setOrigin()             Sets the current record's "origin" value
 * @method Config              setOriginRadius()       Sets the current record's "origin_radius" value
 * @method Config              setDestination()        Sets the current record's "destination" value
 * @method Config              setDestinationRadius()  Sets the current record's "destination_radius" value
 * @method Config              setLoadsType()          Sets the current record's "loads_type" value
 * @method Config              setLength()             Sets the current record's "length" value
 * @method Config              setWeight()             Sets the current record's "weight" value
 * @method Config              setFromDate()           Sets the current record's "from_date" value
 * @method Config              setToDate()             Sets the current record's "to_date" value
 * @method Config              setFrequence()          Sets the current record's "frequence" value
 * @method Config              setType()               Sets the current record's "type" value
 * @method Config              setLastExecutedAt()     Sets the current record's "last_executed_at" value
 * @method Config              setJobboardConfigs()    Sets the current record's "JobboardConfigs" collection
 * @method Config              setConfigTrucks()       Sets the current record's "ConfigTrucks" collection
 * 
 * @package    emc
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConfig extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('config');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('max_age', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('origin', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('origin_radius', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('destination', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('destination_radius', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('loads_type', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('length', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             ));
        $this->hasColumn('weight', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             ));
        $this->hasColumn('from_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('to_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('frequence', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('last_executed_at', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('JobboardConfig as JobboardConfigs', array(
             'local' => 'id',
             'foreign' => 'config_id'));

        $this->hasMany('ConfigTruck as ConfigTrucks', array(
             'local' => 'id',
             'foreign' => 'config_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}